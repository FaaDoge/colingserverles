@inject SweetAlertService sweet

<EditForm EditContext="contextoEdicion" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label>ID:</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@afiliado.Id" />
        </div>
    </div>

    <div class="mb-3">
        <label>ID Persona:</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@afiliado.IdPersona" />
        </div>
    </div>

    <div class="mb-3">
        <label>Fecha de Afiliación:</label>
        <div>
            <InputDate class="form-control" @bind-Value="@afiliado.FechaAfiliacion" />
        </div>
    </div>

    <div class="mb-3">
        <label>Código de Afiliado:</label>
        <div>
            <InputText class="form-control" @bind-Value="@afiliado.CodigoAfiliado" />
        </div>
    </div>

    <div class="mb-3">
        <label>Número de Título Provisional:</label>
        <div>
            <InputText class="form-control" @bind-Value="@afiliado.NroTituloProvisional" />
        </div>
    </div>

    <div class="mb-3">
        <label>Estado:</label>
        <div>
            <InputText class="form-control" @bind-Value="@afiliado.Estado" />
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Guardar</button>
    <button class="btn btn-primary" @onclick="Cancelar">Cancelar</button>

</EditForm>

@code {
    private EditContext contextoEdicion = null!;

    [Parameter]
    [EditorRequired]
    public Afiliado afiliado { get; set; } = null;

    [Parameter]
    [EditorRequired]
    public EventCallback OnValidSubmit { get; set; }

    [Parameter]
    [EditorRequired]
    public EventCallback Cancelar { get; set; }

    public bool formularioPostOk { get; set; }

    protected override void OnInitialized()
    {
        contextoEdicion = new EditContext(afiliado);
    }

    private async Task AntesDeNavegarInternamente(LocationChangingContext contexto)
    {
        var formularioModificado = contextoEdicion.IsModified();

        if (!formularioModificado || formularioPostOk)
        {
            return;
        }

        var result = await sweet.FireAsync(new SweetAlertOptions
        {
            Title = "Confirmacion",
            Text = "Desea abandonar esta pantalla? Perdera los cambios",
            Icon = SweetAlertIcon.Warning,
            ShowCancelButton = true,
            CancelButtonText = "No",
            ConfirmButtonText = "Si"
        });

        var confirm = !string.IsNullOrEmpty(result.Value);
        if (confirm)
            return;

        contexto.PreventNavigation();
    }
}
