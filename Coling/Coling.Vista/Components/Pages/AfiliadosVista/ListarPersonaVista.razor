@page "/personas"

@inject IPersonaService servicio
@inject SweetAlertService Swal
@inject NavigationManager nav

<h3>Listar Personas</h3>
<div class="form-group row">
    <div class="col-sm-10">
        <a href="/persona/crear" class="btn btn-primary m-1">Agregar Nuevo</a>
    </div>
</div>
<div>
    <table class="table">
        <thead>
            <tr>
                <th><strong>Nombre</strong></th>
                <th><strong>Apellidos</strong></th>
                <th><strong>Fecha de Nacimiento</strong></th>
                <th><strong>Foto</strong></th>
                <th><strong>Estado</strong></th>
                <th colspan="2"><strong>Opciones</strong></th>
            </tr>
        </thead>
        @foreach (var persona in PersonasLista)
        {
            <tr>
                <td>@persona.Nombre</td>
                <td>@persona.Apellidos</td>
                <td>@persona.FechaNacimiento.ToShortDateString()</td>
                <td>@persona.Foto</td>
                <td>@persona.Estago</td>
                <td><a href="/persona/editar/@persona.Id" class="btn btn-primary m-1">Editar</a></td>
                <td><button class="btn btn-danger" @onclick="() => EliminarPersona(persona.Id)">Eliminar</button></td>
            </tr>
        }
    </table>
</div>

@code {
    public List<Persona> PersonasLista { get; set; } = new List<Persona>();
    string token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvIjoidXNlciIsInJvbCI6IkFkbWluIiwiZXN0YWRvIjoiQWN0aXZvIiwiZXhwIjoxNzE2MjY1MTk0fQ.OqBLdW6KzhTzBu7xNeJa3d_TjvicQcVzYlQ1V5a6j6A";

    protected override async Task OnInitializedAsync()
    {
        var respuesta = await servicio.ListaPersonas(token);
        PersonasLista = respuesta;
    }

    public async void EliminarPersona(int id)
    {
        /*
        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "¿Estás seguro?",
                Text = "¿Deseas borrar este registro de persona?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Sí, borrarlo!",
                CancelButtonText = "No, cancelar",
            });

        if (!result.IsConfirmed) return;*/
        var respuesta = await servicio.BorrarPersona(id, token);
        if (respuesta) { nav.NavigateTo("/personas", forceLoad: true); }
    }
}
