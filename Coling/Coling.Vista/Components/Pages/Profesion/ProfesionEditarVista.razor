@page "/profesiones/editar/{RowKey}"
@inject IProfesionService servicio
@inject NavigationManager nav
@inject SweetAlertService sweetAlertService

<h3>Editar Profesion</h3>

@if (profesion != null)
{
    <ProfesionFormularioVista @ref="insform" profesion="profesion" OnValidSubmit="Editar" Cancelar="Navegar"></ProfesionFormularioVista>
}
else
{
    <p>Cargando...</p>
}

@code {
    [Parameter]
    public string RowKey { get; set; }
    private ProfesionFormularioVista? insform;
    private Profesion profesion;
    string token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvIjoidXNlciIsInJvbCI6IkFkbWluIiwiZXN0YWRvIjoiQWN0aXZvIiwiZXhwIjoxNzE0MDA1NDA3fQ.0xvrU50bm9jqZxt9Di41-7fh83opvqoTCoaNNw8yKAU";

    protected override async Task OnInitializedAsync()
    {
        var respuesta = await servicio.ListaID(RowKey,token);
        profesion = respuesta;
    }
    
    private async Task Editar()
    {
        var respuesta = await servicio.Editar(profesion, token);
        if (!respuesta)
        {
            await sweetAlertService.FireAsync("Error", "No se pudo guardar", SweetAlertIcon.Error);
            return;
        }
        Navegar();
    }

    private void Navegar()
    {
        insform!.formularioPostOk = true;
        nav.NavigateTo("/profesiones", forceLoad: true);
    }
}
