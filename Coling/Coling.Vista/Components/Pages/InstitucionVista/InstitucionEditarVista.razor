@page "/institucion/editar/{RowKey}"
@inject IInstitucionService servicio
@inject NavigationManager nav
@inject SweetAlertService sweetAlertService

<h3>Editar Institucion</h3>

@if (institucion != null)
{
    <InstitucionFormularioVista @ref="insform" institucion="institucion" OnValidSubmit="Editar" Cancelar="Navegar"></InstitucionFormularioVista>
}
else
{
    <p>Cargando...</p>
}

@code {
    [Parameter]
    public string RowKey { get; set; }
    private InstitucionFormularioVista? insform;
    private Institucion institucion;
    string token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvIjoidXNlciIsInJvbCI6IkFkbWluIiwiZXN0YWRvIjoiQWN0aXZvIiwiZXhwIjoxNzE2MjY1MTk0fQ.OqBLdW6KzhTzBu7xNeJa3d_TjvicQcVzYlQ1V5a6j6A";


    protected override async Task OnInitializedAsync()
    {
        var respuesta = await servicio.ListaInstitucionID(RowKey,token);
        institucion = respuesta;
    }
    
    


    private async Task Editar()
    {
        var respuesta = await servicio.EditarInstitucion(institucion, token);
        /*if (!respuesta)
        {
            await sweetAlertService.FireAsync("Error", "No se pudo guardar", SweetAlertIcon.Error);
            return;
        }*/
        Navegar();
    }

    private void Navegar()
    {
        insform!.formularioPostOk = true;
        nav.NavigateTo("/instituciones", forceLoad: true);
    }

}